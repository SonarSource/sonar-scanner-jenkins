<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci.plugins</groupId>
    <artifactId>plugin</artifactId>
    <!-- See https://github.com/jenkinsci/plugin-pom/releases -->
    <version>5.12</version>
    <relativePath />
  </parent>

  <artifactId>sonar</artifactId>
  <version>${revision}${changelist}</version>
  <packaging>hpi</packaging>

  <name>SonarQube Scanner for Jenkins</name>
  <url>https://github.com/jenkinsci/sonarqube-plugin</url>
  <inceptionYear>2007</inceptionYear>
  <organization>
    <name>SonarSource</name>
    <url>https://sonarsource.com</url>
  </organization>
  <licenses>
    <license>
      <name>GNU Lesser General Public License (LGPL), v.3</name>
      <url>https://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:https://github.com/${gitHubRepo}.git</connection>
    <developerConnection>scm:git:git@github.com:${gitHubRepo}.git</developerConnection>
    <url>https://github.com/${gitHubRepo}</url>
    <tag>${scmTag}</tag>
  </scm>
  <issueManagement>
    <system>JIRA</system>
    <url>https://jira.sonarsource.com/browse/SONARJNKNS</url>
  </issueManagement>

  <properties>
    <revision>2.18.1</revision>
    <changelist>-SNAPSHOT</changelist>
    <gitHubRepo>jenkinsci/sonarqube-plugin</gitHubRepo>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <hudson.version>${project.parent.version}</hudson.version>
    <sonar.exclusions>target/generated-sources/**/*</sonar.exclusions>
    <gitRepositoryName>sonar-scanner-jenkins</gitRepositoryName>
    <version.artifactory.plugin>3.6.1</version.artifactory.plugin>
    <!-- https://www.jenkins.io/doc/developer/plugin-development/choosing-jenkins-baseline/ -->
    <jenkins.baseline>2.479</jenkins.baseline>
    <jenkins.version>${jenkins.baseline}.3</jenkins.version>
    <version.cyclonedx.plugin>2.7.9</version.cyclonedx.plugin>
    <!-- Disable parallel tests on Travis -->
    <concurrency>1</concurrency>
    <!-- Skip Spotbugs, we are using SonarQube -->
    <spotbugs.skip>true</spotbugs.skip>
    <!-- No need to rerun tests, because of HAP-859, artifactory plugin will not upload the artifact -->
    <surefire.rerunFailingTestsCount>0</surefire.rerunFailingTestsCount>

    <!-- To configure maven-license-plugin to check license headers -->
    <license.name>GNU LGPL v3</license.name>
    <license.owner>SonarSource SA</license.owner>
    <license.title>${project.name}</license.title>
    <license.years>${project.inceptionYear}-2025</license.years>
    <license.mailto>mailto:info AT sonarsource DOT com</license.mailto>

    <artifactsToPublish>${project.groupId}:${project.artifactId}:hpi${project.groupId}:${project.artifactId}:json:cyclonedx</artifactsToPublish>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.jenkins.tools.bom</groupId>
        <artifactId>bom-${jenkins.baseline}.x</artifactId>
        <version>4669.v0e99c712a_30e</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-classworlds</artifactId>
        <version>2.5.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.13</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>4.4.14</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>1.15.3</version>
      </dependency>
      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>3.9.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>commons-lang3-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>caffeine-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.sonarqube</groupId>
      <artifactId>sonar-ws</artifactId>
      <version>10.3.0.82913</version>
      <exclusions>
        <exclusion>
          <groupId>com.squareup.okhttp3</groupId>
          <artifactId>okhttp</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>3.25.5</version>
    </dependency>
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>okhttp-api</artifactId>
    </dependency>
    <dependency>
      <!-- needed for SonarPublisher -->
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>maven-plugin</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>configurationslicing</artifactId>
      <version>548.ve92d48e66b_f8</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-support</artifactId>
      <optional>true</optional>
      <exclusions>
        <exclusion>
          <groupId>org.jenkins-ci.plugins</groupId>
          <artifactId>script-security</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>script-security</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>credentials</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>plain-credentials</artifactId>
    </dependency>
    <!-- Webhook secret validation -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.17.0</version>
    </dependency>

    <!-- Test deps -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.11.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-cps</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-job</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-durable-task-step</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-basic-steps</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>structs</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>mailer</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkinsci.plugins</groupId>
      <artifactId>pipeline-model-definition</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.jenkins</groupId>
      <artifactId>configuration-as-code</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.jenkins.configuration-as-code</groupId>
      <artifactId>test-harness</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.activation</groupId>
          <artifactId>javax.activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
        <groupId>jakarta.activation</groupId>
        <artifactId>jakarta.activation-api</artifactId>
        <version>1.2.2</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
        </plugin>
        <plugin>
          <groupId>org.cyclonedx</groupId>
          <artifactId>cyclonedx-maven-plugin</artifactId>
          <version>${version.cyclonedx.plugin}</version>
          <configuration>
            <projectType>application</projectType>
            <includeBomSerialNumber>true</includeBomSerialNumber>
            <includeCompileScope>true</includeCompileScope>
            <includeProvidedScope>true</includeProvidedScope>
            <includeRuntimeScope>true</includeRuntimeScope>
            <includeSystemScope>true</includeSystemScope>
            <includeTestScope>true</includeTestScope>
            <includeLicenseText>false</includeLicenseText>
            <outputFormat>json</outputFormat>
            <outputName>bom</outputName>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <localCheckout>true</localCheckout>
          <pushChanges>true</pushChanges>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <dependencies>
          <dependency>
            <groupId>org.sonarsource.license-headers</groupId>
            <artifactId>license-headers</artifactId>
            <version>1.3</version>
          </dependency>
        </dependencies>
        <configuration>
          <header>sonarsource/licenseheaders/${license.name}.txt</header>
          <failIfMissing>true</failIfMissing>
          <strictCheck>true</strictCheck>
          <encoding>${project.build.sourceEncoding}</encoding>
          <properties>
            <license.owner>${license.owner}</license.owner>
            <license.title>${license.title}</license.title>
            <license.years>${license.years}</license.years>
            <license.mailto>${license.mailto}</license.mailto>
          </properties>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
            <js>SLASHSTAR_STYLE</js>
            <css>SLASHSTAR_STYLE</css>
            <less>SLASHSTAR_STYLE</less>
          </mapping>
          <includes>
            <include>src/*/java/**/*.java</include>
            <include>src/*/js/**/*.js</include>
            <include>src/*/css/**/*.css</include>
            <include>src/*/less/**/*.less</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>enforce-license-headers</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.cyclonedx</groupId>
        <artifactId>cyclonedx-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>makeAggregateBom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deploy-sonarsource</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-deploy-settings</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <bannedDependencies>
                        <!-- the activation framework was renamed to jarkata activation framework -->
                      <excludes>
                            <exclude>javax.activation:javax.actication-api</exclude>
                            <exclude>com.sun.activation:javax.activation</exclude>
                            <exclude>javax.activation:activation</exclude>
                        </excludes>
                        <message>use jakarta.activation:jakarta.activation-api or com.sun.activation:jakarta.activation instead of javax.activation</message>
                    </bannedDependencies>
                    <requireProperty>
                      <property>gitRepositoryName</property>
                      <message>You must set name of Git repository in your pom</message>
                    </requireProperty>
                    <requireEnvironmentVariable>
                      <variableName>ARTIFACTORY_URL</variableName>
                    </requireEnvironmentVariable>
                    <requireEnvironmentVariable>
                      <variableName>ARTIFACTORY_DEPLOY_REPO</variableName>
                    </requireEnvironmentVariable>
                    <requireEnvironmentVariable>
                      <variableName>ARTIFACTORY_DEPLOY_USERNAME</variableName>
                    </requireEnvironmentVariable>
                    <requireEnvironmentVariable>
                      <variableName>ARTIFACTORY_DEPLOY_PASSWORD</variableName>
                    </requireEnvironmentVariable>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- this maven plugin is not deployed in Maven Central. It should be downloaded from JFrog JCenter or from SonarSource
              repositories -->
            <groupId>org.jfrog.buildinfo</groupId>
            <artifactId>artifactory-maven-plugin</artifactId>
            <version>${version.artifactory.plugin}</version>
            <executions>
              <execution>
                <id>build-info</id>
                <goals>
                  <goal>publish</goal>
                </goals>
                <configuration>
                  <artifactory>
                    <envVarsExcludePatterns>
                      *password*,*PASSWORD*,*secret*,*MAVEN_CMD_LINE_ARGS*,sun.java.command,*token*,*TOKEN*,*LOGIN*,*login*,*SIGN_KEY*,*ARTIFACTORY_API_KEY*,*API_KEY*,*PASSPHRASE*
                    </envVarsExcludePatterns>
                    <includeEnvVars>true</includeEnvVars>
                    <timeoutSec>60</timeoutSec>
                  </artifactory>
                  <deployProperties>
                    <vcs.revision>{{GIT_COMMIT|TRAVIS_COMMIT}}</vcs.revision>
                    <vcs.branch>{{GIT_BRANCH|TRAVIS_BRANCH}}</vcs.branch>
                    <build.name>${gitRepositoryName}</build.name>
                    <build.number>{{BUILD_ID|TRAVIS_BUILD_NUMBER}}</build.number>
                  </deployProperties>
                  <licenses>
                    <autoDiscover>true</autoDiscover>
                    <includePublishedArtifacts>false</includePublishedArtifacts>
                    <runChecks>true</runChecks>
                    <scopes>project,provided</scopes>
                    <violationRecipients>licences-control@sonarsource.com</violationRecipients>
                  </licenses>
                  <publisher>
                    <contextUrl>${env.ARTIFACTORY_URL}</contextUrl>
                    <repoKey>${env.ARTIFACTORY_DEPLOY_REPO}</repoKey>
                    <username>${env.ARTIFACTORY_DEPLOY_USERNAME}</username>
                    <password>${env.ARTIFACTORY_DEPLOY_PASSWORD}</password>
                    <publishBuildInfo>true</publishBuildInfo>
                    <publishArtifacts>true</publishArtifacts>
                  </publisher>
                  <buildInfo>
                    <buildName>${gitRepositoryName}</buildName>
                    <buildNumber>{{BUILD_ID|TRAVIS_BUILD_NUMBER}}</buildNumber>
                    <buildUrl>{{CI_BUILD_URL|BUILD_URL}}</buildUrl>
                    <vcsRevision>{{GIT_COMMIT|TRAVIS_COMMIT}}</vcsRevision>
                  </buildInfo>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
